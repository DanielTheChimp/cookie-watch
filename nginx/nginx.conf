upstream cookie_watch {
    server cookie_watch:5001;
}

# Redirect to HTTPS
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
        return 301 https://$host$request_uri;
    }
}

# Cookie Watch
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cookie.danielp.xyz;

    ssl_certificate /etc/letsencrypt/live/danielp.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/danielp.xyz/privkey.pem;

    include /etc/nginx/common.conf;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/danielp.xyz/chain.pem;

    location / {
        proxy_pass http://cookie_watch;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cookie.danielp.work;

    ssl_certificate /etc/letsencrypt/live/danielp.work/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/danielp.work/privkey.pem;

    include /etc/nginx/common.conf;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/danielp.work/chain.pem;

    location / {
        proxy_pass http://cookie_watch;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cookies.xsinator.com;

    ssl_certificate /etc/letsencrypt/live/cookies.xsinator.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cookies.xsinator.com/privkey.pem;

    include /etc/nginx/common.conf;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/cookies.xsinator.com/chain.pem;

    location / {
        proxy_pass http://cookie_watch;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
}